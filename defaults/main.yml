---
# defaults file for geonode

# app_name should be a shorthand, lowercase, no spaces version of the
# application name. Assumed to be the project folder name and app name.
# such as: {{ app_name }}/{{ app_name }}/settings.py
app_name: my_geonode

# geonode_version should be the geonode version to install
# if not provided in the requirements file (currently dropped in master)
geonode_version: 2.6.3

# github user who owns the repository
# if "geonode" is provided as a github user, this ansible role will create
# a geonode project template from scratch (demo mode)
github_user: GeoNode

# git repository name
# defaults to the application name, but should be overriden if diffent
repo_name: "{{ app_name }}"

# remote git repository to pull application code from, for example:
code_repository: "https://github.com/{{ github_user }}/{{ repo_name }}.git"

# git branch name. Defaults to master
branch_name: master

# Server name for nginx.
server_name: 54.157.187.117

db_data_instance: "{{ app_name }}"
db_metadata_instance: "{{ app_name }}_app"
db_password: "{{ app_name }}"
db_user: "{{ app_name }}"
db_region: us-east-1
db_engine: postgres
db_instance_type: db.t2.medium
db_storage_type: gp2
db_multi_zone: yes
db_publicly_accessible: yes
db_data_size: 200
db_metadata_size: 10
db_maint_window: mon:05:00-mon:06:00
db_backup_retention: 35
db_backup_window: 07:00-07:30
db_license_model: postgresql-license

# Postgres variables
pg_hba_conf: /etc/postgresql/9.5/main/pg_hba.conf
pg_conf: /etc/postgresql/9.5/main/postgresql.conf
pg_max_connections: 100
pg_shared_buffers: 128MB

# Django settings module to use when running Manage commands
# for example, txt2react.settings
main_module: "{{ app_name }}"

# name of the user created by the Fabric script that Ansible will use to
# handle server tasks
deploy_user: ubuntu

# server directory for the virtualenv that will be created to run the web app
virtualenv_dir: /home/{{deploy_user}}/venvs

# server directory to put the code into that is pulled from the code
# repository
app_code_dir: /home/{{deploy_user}}

# location of the requirements.txt flie in the code
requirements_file: "{{app_code_dir}}/requirements.txt"

# root domain name the server should run as. do not include a subdomain,
# for example, txt2react.com
# TODO: Remove as unused
#site_url: "{{ app_name }}"

ssh_dir: ~/.ssh/

geoserver_url: http://build.geonode.org/geoserver/latest/geoserver-2.9.x-oauth2.war
geoserver_data_url: http://build.geonode.org/geoserver/latest/data-2.9.x-oauth2.zip

apache: false
osgeo_importer: false
